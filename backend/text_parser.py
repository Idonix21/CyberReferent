# text_parser.py
import re

def clean_multiline_refs(ref):
    """
    Функция для очистки текста библиографической записи:
    - Убирает переносы строк с тире.
    - Добавляет пробелы между словами, если они сливаются.
    - Заменяет множественные пробелы одним.
    """
    ref = re.sub(r'-\n\s*', '', ref)
    ref = re.sub(r'(?<=[a-zа-яё])(?=[A-ZА-ЯЁ])', ' ', ref)
    ref = re.sub(r'\n+', ' ', ref)
    ref = re.sub(r'\s+', ' ', ref)
    return ref.strip()

def split_references_from_text(bibliography_text):
    """
    Функция разбивает библиографический список, введённый вручную, на отдельные записи.
    
    Используются два подхода:
    1. Разбиение по шаблону "Пример оформления ...", если в тексте присутствует подобное описание.
    2. Если первый вариант не сработал (получен один элемент), пробуем стандартное разбиение по нумерации (например, "1. ").
    
    Возвращает список строк с отдельными библиографическими записями.
    """
    # Попытка разделить текст по шаблону "Пример оформления..."
    references = re.split(r'Пример оформления.*?:\s*\d+\s*', bibliography_text)
    
    # Если разделение по шаблону "Пример оформления" не дало результата, пробуем по нумерации
    if len(references) <= 1:
        references = re.split(r'\n\d+\.\s', bibliography_text)
    
    # Фильтрация пустых элементов и очистка каждой записи
    references = [clean_multiline_refs(ref) for ref in references if len(ref.strip()) > 5]
    return references

# Пример тестирования нового модуля
if __name__ == '__main__':
    test_text = """
Пример оформления книги в списке литературы: 1
Иванов И. И. Экономика и управление. — 3-е изд., испр. и доп. — М.: Просвещение, 2020. — 320 с. 1

Пример оформления многоавторской работы: 1
Петров П. П., Сидоров С. С., Иванов И. И. и др. Инновационные технологии. — СПб.: Наука, 2019. — 220 с. 1

Пример оформления сборника под редакцией: 1
Экономика и управление: Учебник / Под ред. А. А. Смирнова. — М.: Просвещение, 2018. — 400 с. 1
"""
    refs = split_references_from_text(test_text)
    for i, ref in enumerate(refs):
        print(f"Запись {i+1}: {ref}")
