import streamlit as st
import requests
import json

st.set_page_config(page_title="Cyber-Referent")
st.title("üéì Cyber-Referent")

# –í—ã–±–æ—Ä —Ñ–æ—Ä–º–∞—Ç–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è: GOST, APA, MLA
style = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è:", ["GOST", "APA", "MLA"])

# –í—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏
mode = st.radio("–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø—Ä–æ–≤–µ—Ä–∫–∏:", ["üìÑ –§–∞–π–ª PDF/DOCX", "üìù –¢–µ–∫—Å—Ç —Å–ø–∏—Å–∫–∞ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã"])

if mode == "üìÑ –§–∞–π–ª PDF/DOCX":
    uploaded_file = st.file_uploader("–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª:", ['pdf', 'docx'])
    
    if st.button("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ñ–∞–π–ª"):
        if uploaded_file:
            files = {"file": (uploaded_file.name, uploaded_file.getvalue())}
            # –ü–µ—Ä–µ–¥–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–µ style
            data = {"style": style}
            response = requests.post("http://localhost:8000/check-file/", files=files, data=data, stream=True)
            
            valid_container = st.empty()
            invalid_container = st.empty()
            
            valid_results = []
            invalid_results = []
            
            # –ß–∏—Ç–∞–µ–º –ø–æ—Ç–æ–∫ –æ—Ç–≤–µ—Ç–∞ –ø–æ —Å—Ç—Ä–æ–∫–∞–º
            for line in response.iter_lines(decode_unicode=True):
                if line:
                    try:
                        data_line = json.loads(line)
                        if data_line["type"] == "valid":
                            valid_results.append(data_line["reference"])
                        elif data_line["type"] == "invalid":
                            invalid_results.append(data_line)
                        # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å—Å—ã–ª–æ–∫
                        with valid_container.container():
                            st.markdown("### ‚úÖ –í–∞–ª–∏–¥–Ω—ã–µ —Å—Å—ã–ª–∫–∏:")
                            for ref in valid_results:
                                st.success(ref)
                        # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
                        with invalid_container.container():
                            st.markdown("### ‚ö†Ô∏è –û—à–∏–±–∫–∏ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
                            for item in invalid_results:
                                st.error(item["original"])
                                st.info(item["errors_and_corrections"])
                                rec = item["recommendation"]
                                st.info(f"üìó –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –∞–Ω–∞–ª–æ–≥: {rec['journal']} (ISSN: {rec['ISSN']})")
                    except Exception as e:
                        st.error(f"–û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")

elif mode == "üìù –¢–µ–∫—Å—Ç —Å–ø–∏—Å–∫–∞ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã":
    bibliography_text = st.text_area("–í—Å—Ç–∞–≤—å—Ç–µ —Å–ø–∏—Å–æ–∫ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã:")
    
    if st.button("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—Å—Ç"):
        # –ü–µ—Ä–µ–¥–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–º–µ—Å—Ç–µ —Å —Ç–µ–∫—Å—Ç–æ–º –±–∏–±–ª–∏–æ–≥—Ä–∞—Ñ–∏–∏
        data = {"bibliography_text": bibliography_text, "style": style}
        response = requests.post("http://127.0.0.1:8000/check-text/", data=data, stream=True)
        
        valid_container = st.empty()
        invalid_container = st.empty()
        
        valid_results = []
        invalid_results = []
        
        for line in response.iter_lines(decode_unicode=True):
            if line:
                try:
                    data_line = json.loads(line)
                    if data_line["type"] == "valid":
                        valid_results.append(data_line["reference"])
                    elif data_line["type"] == "invalid":
                        invalid_results.append(data_line)
                    with valid_container.container():
                        st.markdown("### ‚úÖ –í–∞–ª–∏–¥–Ω—ã–µ —Å—Å—ã–ª–∫–∏:")
                        for ref in valid_results:
                            st.success(ref)
                    with invalid_container.container():
                        st.markdown("### ‚ö†Ô∏è –û—à–∏–±–∫–∏ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
                        for item in invalid_results:
                            st.error(item["original"])
                            st.info(item["errors_and_corrections"])
                            rec = item["recommendation"]
                            st.info(f"üìó –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –∞–Ω–∞–ª–æ–≥: {rec['journal']} (ISSN: {rec['ISSN']})")
                except Exception as e:
                    st.error(f"–û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")

